
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { AlertTriangle, Bot, Settings, TrendingUp, TrendingDown, DollarSign } from 'lucide-react';

const FinanceAlertSystem = () => {
  const [showSettings, setShowSettings] = useState(false);

  // Mock alert data
  const criticalAlerts = [
    {
      id: 1,
      type: 'cash_flow',
      title: '‡∏Å‡∏£‡∏∞‡πÅ‡∏™‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ï‡πà‡∏≥',
      message: '‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 85,000 ‡∏ö‡∏≤‡∏ó ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥',
      severity: 'high',
      timestamp: '2025-06-14 09:30:00',
      action: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πà‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô'
    },
    {
      id: 2,
      type: 'expense_spike',
      title: '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥',
      message: '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 25% ‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      severity: 'medium',
      timestamp: '2025-06-14 08:15:00',
      action: '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô'
    },
    {
      id: 3,
      type: 'tax_due',
      title: '‡∏†‡∏≤‡∏©‡∏µ‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î',
      message: 'VAT ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÉ‡∏ô 5 ‡∏ß‡∏±‡∏ô ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 40,000 ‡∏ö‡∏≤‡∏ó',
      severity: 'medium',
      timestamp: '2025-06-14 07:00:00',
      action: '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏†‡∏≤‡∏©‡∏µ'
    }
  ];

  const aiInsights = [
    {
      type: 'trend',
      title: '‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ',
      insight: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏µ‡∏Å 8%',
      confidence: 85,
      recommendation: '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£'
    },
    {
      type: 'optimization',
      title: '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏•‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô',
      insight: '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏™‡∏≤‡∏Ç‡∏≤‡∏≠‡∏∑‡πà‡∏ô 15% ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏î‡πâ',
      confidence: 72,
      recommendation: '‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á'
    },
    {
      type: 'risk',
      title: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
      insight: '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡∏≠‡∏≤‡∏à‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏™‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
      confidence: 68,
      recommendation: '‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏≤‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'
    }
  ];

  const kpiMonitoring = [
    { name: 'Gross Profit Margin', current: 52.3, target: 55, status: 'warning' },
    { name: 'Current Ratio', current: 1.85, target: 2.0, status: 'warning' },
    { name: 'Debt to Equity', current: 1.16, target: 1.0, status: 'danger' },
    { name: 'ROI', current: 18.5, target: 20, status: 'good' }
  ];

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'high': return 'border-l-red-500 bg-red-50';
      case 'medium': return 'border-l-yellow-500 bg-yellow-50';
      case 'low': return 'border-l-blue-500 bg-blue-50';
      default: return 'border-l-gray-500 bg-gray-50';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'good': return 'text-green-600 bg-green-100';
      case 'warning': return 'text-yellow-600 bg-yellow-100';
      case 'danger': return 'text-red-600 bg-red-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'good': return <TrendingUp className="w-4 h-4" />;
      case 'warning': return <TrendingDown className="w-4 h-4" />;
      case 'danger': return <AlertTriangle className="w-4 h-4" />;
      default: return <DollarSign className="w-4 h-4" />;
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô / ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå / AI Bot</h2>
          <p className="text-gray-600">‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏±‡∏¢‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å</p>
        </div>
        <Button onClick={() => setShowSettings(true)} variant="outline">
          <Settings className="w-4 h-4 mr-2" />
          ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        </Button>
      </div>

      {/* Critical Alerts */}
      <Card className="border-red-200">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-red-700">
            <AlertTriangle className="w-5 h-5" />
            ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡πà‡∏ß‡∏ô
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {criticalAlerts.map((alert) => (
              <div key={alert.id} className={`border-l-4 pl-4 py-3 ${getSeverityColor(alert.severity)}`}>
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <h4 className="font-semibold text-gray-900">{alert.title}</h4>
                    <p className="text-gray-700 mt-1">{alert.message}</p>
                    <p className="text-sm text-blue-600 mt-2 font-medium">‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {alert.action}</p>
                  </div>
                  <div className="text-right text-xs text-gray-500">
                    {new Date(alert.timestamp).toLocaleString('th-TH')}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* AI Insights */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bot className="w-5 h-5" />
            AI Financial Insights
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            {aiInsights.map((insight, index) => (
              <div key={index} className="bg-gradient-to-r from-blue-50 to-purple-50 p-4 rounded-lg">
                <div className="flex justify-between items-start mb-2">
                  <h4 className="font-semibold text-gray-900">{insight.title}</h4>
                  <span className="text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                    {insight.confidence}% ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
                  </span>
                </div>
                <p className="text-gray-700 mb-3">{insight.insight}</p>
                <div className="bg-white p-3 rounded-md border-l-4 border-purple-500">
                  <strong className="text-purple-700">üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: </strong>
                  <span className="text-gray-700">{insight.recommendation}</span>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* KPI Monitoring */}
      <Card>
        <CardHeader>
          <CardTitle>‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° KPI ‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {kpiMonitoring.map((kpi, index) => (
              <div key={index} className="bg-gray-50 p-4 rounded-lg">
                <div className="flex justify-between items-center mb-2">
                  <h4 className="font-medium text-gray-700">{kpi.name}</h4>
                  <span className={`px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1 ${getStatusColor(kpi.status)}`}>
                    {getStatusIcon(kpi.status)}
                    {kpi.status === 'good' ? '‡∏î‡∏µ' : kpi.status === 'warning' ? '‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á' : '‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á'}
                  </span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: <strong>{kpi.current}%</strong></span>
                  <span>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: <strong>{kpi.target}%</strong></span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2 mt-2">
                  <div 
                    className={`h-2 rounded-full ${kpi.status === 'good' ? 'bg-green-500' : kpi.status === 'warning' ? 'bg-yellow-500' : 'bg-red-500'}`}
                    style={{ width: `${Math.min((kpi.current / kpi.target) * 100, 100)}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Alert Settings Modal */}
      {showSettings && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
          <Card className="w-full max-w-2xl">
            <CardHeader>
              <CardTitle>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div>
                  <h3 className="font-semibold mb-2">‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h3>
                  <div className="space-y-3">
                    <label className="flex items-center justify-between">
                      <span>‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ (‡∏ö‡∏≤‡∏ó)</span>
                      <input type="number" defaultValue="100000" className="w-24 px-2 py-1 border rounded" />
                    </label>
                    <label className="flex items-center justify-between">
                      <span>‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô (%)</span>
                      <input type="number" defaultValue="20" className="w-24 px-2 py-1 border rounded" />
                    </label>
                    <label className="flex items-center justify-between">
                      <span>‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î (‡∏ß‡∏±‡∏ô)</span>
                      <input type="number" defaultValue="7" className="w-24 px-2 py-1 border rounded" />
                    </label>
                  </div>
                </div>

                <div>
                  <h3 className="font-semibold mb-2">‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h3>
                  <div className="space-y-2">
                    <label className="flex items-center">
                      <input type="checkbox" defaultChecked className="mr-2" />
                      ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
                    </label>
                    <label className="flex items-center">
                      <input type="checkbox" defaultChecked className="mr-2" />
                      LINE Notify
                    </label>
                    <label className="flex items-center">
                      <input type="checkbox" className="mr-2" />
                      SMS
                    </label>
                  </div>
                </div>

                <div className="flex justify-end gap-4">
                  <Button variant="outline" onClick={() => setShowSettings(false)}>
                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                  </Button>
                  <Button onClick={() => setShowSettings(false)}>
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
};

export default FinanceAlertSystem;
